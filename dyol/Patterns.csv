,Inspired by,Key phrase,Name,Explanation,CPL,PPL,Text
A,Angles,some actions are easier than others,Access modifiers,public / internal / protected /private,,,
A,Converging & diverging,channel people so they come together,Open office,chat rooms / office design / slack,,,
A,Converging & diverging,channel people to split up,Synchronisation,"async, sem, rendezvous, pipes, monitors",267,,
A,Conveyor belts,bring a feature to the users,IDE,,,,
A,Feature deletion,take away features,Deprecated construct,unused / undesirable,,,
A,Hiding things,hide functions that shouldn't be used,Encapsulation,hide memory alloc / registers / video,104,,
A,Material properties,use materials to favour some actions ,Syntax highlighting,"colour code keywords, constants, clickables",,,
A,Mazes,get people to follow the desired path,Generative methods,wizards / staging / …,,,
A,Pave the cowpaths,recognise desire paths & encode them,Profiling,perf testing,,,
A,Pave the cowpaths,recognise desire paths & encode them,WatchDog,learning / adapting plugin,,,
A,Positioning,rearrange things in space,IDE GUI,debug window / project explorer / …,,,
A,Roadblock,put things in users' way,Static analysis,parsing / type checking,,,
A,Segmentation & spacing,divide into parts usable one at a time,Modules,packages / modules / classes / procs,113,,
A,Simplicity,structure things to easily use features,Built-in patterns,"MVC in Angular, Visitor in Rascal",,,
E,Are you sure?,extra confirmation step,,__ in Python,,,
E,Choice editing,phase out undesired choices,Code completion,,,,
E,Conditional warnings,warning based on the error,Red squiggles,also compile time errors?,,,
E,Defaults,make preferred option default,Defaults,,,,
E,Did you mean?,"detect error, suggest a better option",,tolerant completion?,,,
E,Interlock,disable feature until another one done,,,,,
E,Matched affordances,fit the right way around,Type check,monadic bind,,,
E,Opt-outs,yes to desired option by default,,disabling convention notifications?,,,
E,Portions,change the portion size,Suggestion box?,,,,
E,Task lock-in/out,prevent inadventent use of feature,Save on exit,,,,
I,Feedback through form,form suggest usage,,,,,
I,Kairos,time the suggestion to change behr,,,,,
I,Partial completion,build confidence by finishing phase,Phased processing,"compilation phases, build phases",,,
I,Peer feedback,gen feedback from similar users,,,,,
I,Progress bar,show progress towards a goal,,,,,
I,Real-time feedback,let users know their actions affect it,,(memory consumption?),,,
I,Simulation & feedforward,preview of results of user's actions,Preview,in refactoring,,,
I,Summary feedback,report on what users were doing,,,,,
I,Tailoring,adapt proposed features to user's needs,,,,,
I,Tunnelling & wizards,take users through a decision process,,(duplicate?),,,
L,Challenges & targets,present a challenge,,esoteric languages - Befunge etc,,,
L,Collections,get users to collect things through usage,,(gamification?),,,
L,Leave gaps to fill,leave deliberate gaps to implement,,ANTIPATTERN!,,,
L,Levels,split the system into achievable levels,,,,,
L,Make it a meme,make the design viral,,LOLCODE etc,,,
L,Playfulness,elements that play a game with users,,,,,
L,Rewards,reveal bonus functionality to good users,,,,,
L,Role-playing,makes users feel like they're playing roles,,,,,
L,Scores,assign a user a comparable score,,,,,
L,Storytelling,tell engaging story through design,,,,,
L,Unpredictable reinforcement,give rewards on random schedule,,,,,
P,(A)symmetry,"symmetric = related, asymmetric = unrel",,???,,,
P,Colour associations,colour suggests grouping,Syntax highlighting,,,,
P,Contrast,obvious contrast of parts and background,Comments,,12,,
P,Fake affordances,feature that does not really work,Syntactic sugar,,,,
P,Implied sequences,make the order obvious,,,,,
P,Metaphors,metaphor / analogy,,"bug, cloud, jump",,,
P,Mimicry & mirroring,mirror or mimic a user's behaviour,,,,,
P,Mood,user sensory stimuli to set a mood,,,,,
P,Nakedness,remove the usual cues to make users think,,,,,
P,Perceived affordances,the form of the system suggests its use,,,,,
P,Possibility trees,(metro map),Charts / diagrams?,,,,
P,Prominence,exaggerate or hide a feature,,,,,
P,Proximity & grouping,put related elements closer,Cohesion & coupling,,,,
P,Seductive atmospherics,use ambient sensory effects to induce beh,,,,,
P,Similarity,hide unrelated elements by mimicry,,,,,
P,Transparency,reveal what's under the cover,,,,,
P,Watermarking,make the user own a thing,Code authorship,(write names on stuff),,,
C,Assuaging guilt,reduce feelings of guilt,,linters?,,,
C,Commitment & consistency,get users commit to an idea or goal,,metrics in plugins,,,
C,Decoys,deliberately bad choices next to real ones,,,,,
C,Desire for order,use people's desire for tidiness,,"term ""smells""?",,,
C,Do as you’re told,use an authority figure to enforce users,,EULA?,,,
C,Emotional engagement,get the system to engage with user's emotions,,,,,
C,Expert choice,endorcements by experts,,,,,
C,Framing,present choices to make them all attractive,,array limits in Pascal/Ada?,,,
C,Habits,allow new behaviour to become habitual,,,,,
C,Personality,give the system a personality,,,,,
C,Provoke empathy,show other users' perspectives,,(twitter feed),,,
C,Reciprocation,make user feel there's a favour to be repaid,,,,,
C,Rephrasing & renaming,"rename buttons, labels, etc",,,,,
C,Scarcity,emphasize that the resource is valuable/limited,,,,,
C,Social proof,show that other users do the same,,,,,
M,Anchoring,affect expectations by controlling reference points,,"""this is FP""",,,
M,Antifeatures & crippleware,disable feature to force people to upgrade,,,,,
M,Bundling,include what you want to do with smth user wants,,,,,
M,Degrading performance,degrade performance until demands are met,,,,,
M,First one free,free giveaway lures people in to pay for more,,,,,
M,Forced dichotomy,"no middle option, forces users to make a choice",,,,,
M,Format lock-in/out,only particular format is supported,,C#? .NET!,,,
M,Functional obsolescence,make old system wear out to force upgrades,,,,,
M,"I cut, you choose",eliminate first-mover advantage,,,,,
M,Poison pill,add unpleasant side-effects,,XML Booster?,,,
M,Serving suggestion,direct the use through demonstration,,,,,
M,Slow / no response,encourage alternatives by making options slow,,,,,
M,Style obsolescence,design things to go out of fashion quickly,,,,,
M,Worry resolution,suggest a worry about behaviour and remove it,,,,,
S,Coercive atmospherics,ambient sensory effects affect behavr,,,,,
S,Peerveillance,what you do is visible to peers,Code review,commits are reviewed,,,
S,Sousveillance,what you do is visible to inferiors,,,,,
S,Surveillance,what you do is visible to superiors,,,,,
S,Threat of injury,(spikes on walls),,,,,
S,Threat to property,(severe tire damage),,,,,
S,What you can do,show skills to unlock features,,(gamification),,,
S,What you have,tokens & access cards unlock features,,It is a syntax error to write FORTRAN while not wearing a blue tie.,,,
S,What you know,"password, info",Passwords?,,,,
S,What you’ve done,change depending on prev.behaviour,,,,,
S,Where you are,enable features by location,,,,,
S,Who or what you are,vary features per person/group/object,,(gamified language learning),,,
,,,Keywords,,11,,
,,,Variables,named storage fragments,52,,
,,,Types & scopes,,55,,
,,,Type definitions,"composite types, ADTs",60,,
,,,Parametrised types,"array of …, stack of …",180,,
,,,Composite types,"arrays, lists, sets",156,,
,,,Records,"structs, dictionaries, hashmaps, tables",169,,
,,,Picture clause,,,,
,,,Numeric data types,integers and floats,63,,
,,,Logical types,booleans,66,,
,,,Character types,chars and strings,67,,
,,,Pointers,references,69,,
,,,Operator precedence,,79,,
,,,Assignment,":=, =, +=, overlay, map, boxing, SAC",82,,
,,,Blocks,compound statements,85,,
,,,Branching,"if, jmp, cond, switch/case, goto",86,,
,,,Iteration,"while, for, foreach, LINQ",89,,
,,,Exception handling,"raise, throw, catch, try",95,,
,,,Procedures,"methods, procs, functions, coroutines",106,,
,,,Classes,+traits?,107,,
,,,Redefines,"overloading, shadowing, info hiding",138,,
,,,First class,"FP etc, higher order functions",151,,
,,,Input/output,"files, monads, read/write",187,,
,,,Inheritance,"base and derived classes, multiple",194,,
,,,Substitution,"casting, subtyping, polymorphism",197,,
,,,Lazy evaluation,"weak (ifs), strong (haskell)",239,,
,,,Unification,"prolog, Rascal templates",248,,
,,,Event loop,form of UI-biased concurrency,265,,
